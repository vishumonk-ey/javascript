// let p =new Promise((resolve,reject)=>{
//     let isTrue=false
//     if(isTrue){
//         resolve('sexes')
//     }else{
//         reject('errrur')
//     }

// })
// p
//     .then( (message)=> console.log(`promise resolved : ${message}`))
//     .catch( (message) => console.log(`promise chud gaya : ${message}`))


// promise basicallyy represents pending state kyuki vo callstack pe push aur pop hogya but abhi uska result nhi aaya hai , which will be taken care by webAPi/node enviornment
//has to be chained wirh.then and .catch()
//resolve--->then
//reject--->catch()

const isPhoneStore = true;
const isPhoneAvailable = true; 

function processMessage(resolveCallback, rejectCallback) {
    if (!isPhoneStore) {
      rejectCallback({
        name: 'Wrong store',
        message: 'Sorry, this is a food store!',
      });
    } else if (!isPhoneAvailable) {
      rejectCallback({
        name: 'Out of stock',
        message: 'Sorry, the X phone is out of stock!',
      });
    } else {
      resolveCallback({
        name: 'OK',
        message: 'The X phone is available! How many you want to buy?',
      });
    }
  }


//ASYNC/await--->used to deal with promise

// const response = await fetch('https://jsonplaceholder.typicode.com/todos/1');
//     const json = await response.json();
//     console.log(json);
//await laga diya promise se pehle to it will wait for the promise to either resolve or reject. jabtk promise resolve reject nhi hojaata tbtk aage nhi badhega
async function meraCode(){
    try{const response = await fetch('https://jsonplaceholder.typicode.com/toados/1');
    const json = await response.json();
    console.log(json);
     }
     catch(error){
            console.log(error)
     }
}

meraCode()
